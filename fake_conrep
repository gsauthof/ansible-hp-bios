#!/usr/bin/python

# SPDX-FileCopyrightText: Â© 2020 Georg Sauthoff <mail@gms.tf>
# SPDX-License-Identifier: GPL-3.0-or-later

import argparse
import sys
import xml.etree.ElementTree as ET

# adopted from https://support.hpe.com/hpesc/public/docDisplay?docId=emr_na-a00007607en_us#N10380
# and https://support.hpe.com/hpesc/public/docDisplay?cc=us&docId=emr_na-c01804533&lang=en-us
sample = '''<?xml version="1.0" encoding="UTF-8"?>
<!--generated by conrep version 4.4.0.0-->
<Conrep version="4.4.0.0" originating_platform="ProLiant DL380 Gen9" originating_family="P89" originating_romdate="02/11/2015" originating_processor_manufacturer="Intel(R) Corporation">
  <Section name="IMD_ServerName" helptext="LCD Display name for this server"><Line0>WIN2K12</Line0></Section>
  <Section name="IPL_Order" helptext="Current Initial ProgramLoad device boot order.">
    <Index0>00</Index0><Index1>03</Index1><Index2>02</Index2><Index3>ff</Index3><Index4>ff</Index4><Index5>ff</Index5><Index6>ff</Index6>
    <Index7>ff</Index7><Index8>ff</Index8><Index9>ff</Index9><Index10>ff</Index10><Index11>ff</Index11><Index12>ff</Index12><Index13>ff</Index13>
    <Index14>ff</Index14><Index15>ff</Index15></Section>
  <Section name="IPL_Order_Size" helptext="Current Initial ProgramLoad device boot order size."><Size0>03</Size0></Section>
  <Section name="PCI_Devices" helptext="Lists of PCI devices and their interrupts - not displayed if default values are set.">EMPTY_DELETE</Section>
  <Section name="Controller_Order" helptext="Lists the current boot controller ordering."><Id0>10 3c 19 21</Id0><Slot0>00</Slot0><BusDev0>02 00</BusDev0><Rest0>41</Rest0><Id1>10 3c 80 30</Id1><Slot1>00</Slot1><BusDev1>00 fa</BusDev1><Rest1>41</Rest1><Id2>10 3c 80 30</Id2><Slot2>00</Slot2><BusDev2>00 8c</BusDev2><Rest2>41</Rest2></Section>
  <Section name="System_WOL" helptext="System Wake On Lan Capabilities.">Enabled</Section>
  <Section name="System_APIC" helptext="System APIC Settings(MPS Table Mode).">Full Table</Section>
  <Section name="System_Mouse" helptext="Enable or Disable the onboard mouse port.">Enabled</Section>
  <Section name="System_CPU_Serial_Number" helptext="Enables or disabled CPU serial numbers on systems that support it.">Disabled</Section>
  <Section name="System_COMA" helptext="Settings for UART 1 on systems that support it.">COM1</Section>
  <Section name="System_COMA_IRQ" helptext="Settings for UART 1 on systems that support it.">IRQ4</Section>
  <Section name="System_COMB" helptext="Settings for UART 2 on systems that support it.">Disabled</Section>
  <Section name="System_COMB_IRQ" helptext="Settings for UART 2 on systems that support it.">Undefined</Section>
  <Section name="System_Virtual_Serial_Port" helptext="Virtual Serial Port Settings for systems that support it.">COM2</Section>
  <Section name="System_Virtual_Serial_Port_IRQ" helptext="Virtual Serial Port IRQ Settings for systems that support it.">IRQ3</Section>
  <Section name="System_LPT" helptext="System parallel port settings for systems that support it.">Disabled</Section>
  <Section name="System_LPT_IRQ" helptext="System parallel port settings for systems that support it.">Undefined</Section>
  <Section name="System_LPT_Mode" helptext="System parallel port settings for systems that support it.">SPP</Section>
  <Section name="System_USB_Control" helptext="Systemwide USB settings.">Enabled</Section>
  <Section name="System_USB_EHCI_Controller" helptext="Enables or disabled EHCI mode(USB 2.0) of the system USB controller.">Enabled</Section>
  <Section name="Diskette_Write_Control" helptext="Toggles write control of integrated floppy.">Writes_Enabled</Section>
  <Section name="POST_F1_Prompt" helptext="Controls display of the F1 POST prompt.">Delayed</Section>
  <Section name="Hyperthreading" helptext="Toggles hyperthreading on systems that support it.  This setting is supported on G5 and earlier systems.  For newer systems, use the Intel_Hyperthreading setting.">Enabled</Section>
  <Section name="PowerMonitoring" helptext="This setting determines if Pstate logging and utilization is supported.">Enabled</Section>
</Conrep>'''

def mk_arg_parser():
    p = argparse.ArgumentParser(description='Mock HP conrep BIOS read/write settings tool')
    g = p.add_mutually_exclusive_group(required=True)
    g.add_argument('-l', dest='write_bios', action='store_true',
            help='write settings to BIOS from a file')
    g.add_argument('-s', dest='write_bios', action='store_false',
            help='read settings from BIOS and write them to a file')
    g.add_argument('--test', action='store_true',
            help='test xml parser')
    p.add_argument('-x', dest='hwdef', default='conrep.xml',
            help='hardware definition file (default: %(default)s)')
    p.add_argument('-f', dest='filename', default='conrep.dat',
            help='system configuration data file (default: %(default)s)')
    return p

def parse_args():
    p = mk_arg_parser()
    return p.parse_args()

def test():
    d = ET.ElementTree(ET.fromstring(sample))
    from library.conrep import parse_dat
    h = parse_dat(d)
    for k, v in h.items():
        print('{}: {}'.format(k, v))

def main():
    args = parse_args()
    if args.test:
        return test()
    if args.write_bios:
        d = ET.parse(args.filename)
        print('Writing BIOS ... done')
    else:
        with open(args.filename, 'w') as f:
            print(sample, file=f)

if __name__ == '__main__':
    sys.exit(main())
